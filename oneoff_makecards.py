# Used to generate Vocab Mega Deck cards from a list of words

# Card format is semicolon-delimited by field name, e.g.
# expression;meaning;heisig keywords;reading
# `meaning` I normally leave blank and fill in as I go, although it would be cool to automatically generate that too
# heisig keywords need to be looked up in the rtk dictionaries
# reading can be generated by importing `from japanese.reading import mecab` and calling `mecab.reading(expression)`

# note that you can't define functions in the Anki REPL (ugh) so that's why this is just one long script

# Open Anki REPL from Anki home screen with Cmd Shift : (colon)
# Paste script
# Change value of input
# Hit Cmd Enter to run script
# Save output to a text file
# Import text file into Anki via File -> Import (be sure to allow HTML in fields)
# Double-check output (especially mecab-generated readings), add definitions if desired

import codecs
from japanese.reading import mecab

# construct RTK dictionary, used for looking up Heisig keywords
# key is kanji, value is keyword, e.g.
# { 理: logic }

rtk = mw.col.findCards("tag:rtk1")
rtk3 = mw.col.findCards("tag:rtk3")

rtk.extend(rtk3)

rtk_dict = {}

for id in rtk:
  card = mw.col.getCard(id)
  note = card.note()
  kanji = note.__getitem__(u'Expression')
  keyword = note.__getitem__(u'Keyword')
  rtk_dict[kanji] = keyword

# define input (change this to the values you want)

input = u"""
生き様
参考になる
前のめり
鵜呑み
"""

expressions = input.split()
output = ""

# loop through expressions and construct the semicolon-delimited string
for expression in expressions:
  output += expression
  output += ";"
  output += ";" # meaning is blank
  for character in expression:
    if rtk_dict.get(character):
      output += character + ": " + rtk_dict.get(character) + "<br>" # use <br> instead of newline because the newline delimits each entry instead
  output += ";"
  output += mecab.reading(expression)
  output += "\n"

print output
